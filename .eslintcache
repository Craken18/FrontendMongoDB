[{"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\index.tsx":"1","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoList.tsx":"3","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoForm.tsx":"4","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoService.ts":"5","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\videoItem.tsx":"6","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Navbar\\Navbar.tsx":"7","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoItem.tsx":"8"},{"size":1183,"mtime":1609389924415,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":994,"mtime":1609393865224,"results":"12","hashOfConfig":"10"},{"size":3025,"mtime":1609446217422,"results":"13","hashOfConfig":"10"},{"size":645,"mtime":1609395734116,"results":"14","hashOfConfig":"10"},{"size":912,"mtime":1609390528657,"results":"15","hashOfConfig":"10"},{"size":1091,"mtime":1609394535007,"results":"16","hashOfConfig":"10"},{"size":1242,"mtime":1609396314313,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"9booim",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\index.tsx",[],["37","38"],"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoList.tsx",[],"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoForm.tsx",["39"],"import React, { ChangeEvent, FormEvent, useState, useEffect } from \"react\";\r\nimport { Ivideo } from \"./Video\";\r\nimport { createVideo, getVideo, updateVideo } from \"./VideoService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst VideoForm = () => {\r\n  const history = useHistory();\r\n  const params: Params = useParams();\r\n\r\n  const [video, setVideo] = useState<Ivideo>({\r\n    title: \"\",\r\n    url: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleChange = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setVideo({\r\n      ...video,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSumbit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    \r\n    if(!params.id){\r\n      await createVideo(video);\r\n      toast.success(\"Video Agregado\")\r\n    }\r\n    else{\r\n      await updateVideo(params.id, video)\r\n      toast.success(\"Video Actualizado\");\r\n    }\r\n\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getAnVideo = async (id: string) => {\r\n    const res = await getVideo(id);\r\n    const { title, description, url } = res.data;\r\n    setVideo({ title, description, url });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (params.id) getAnVideo(params.id);\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4 offset-md-4\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h3>Nuevo Video</h3>\r\n\r\n            <form onSubmit={handleSumbit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"Agrega el Titulo del Video\"\r\n                  className=\"form-control\"\r\n                  autoFocus\r\n                  onChange={handleChange}\r\n                  value={video.title}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"url\"\r\n                  placeholder=\"Agrega la URL del Video\"\r\n                  className=\"form-control\"\r\n                  onChange={handleChange}\r\n                  value={video.url}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  rows={3}\r\n                  placeholder=\"Agrega una Descripcion del Video\"\r\n                  onChange={handleChange}\r\n                  value={video.description}\r\n                ></textarea>\r\n              </div>\r\n              {params.id ? (\r\n                <button className=\"btn btn-success\">Actualizar Video</button>\r\n              ) : (\r\n                <button className=\"btn btn-primary\">Agregar Video</button>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoForm;\r\n","C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoService.ts",[],"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\videoItem.tsx",["40"],"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Users\\Yonatan\\Documents\\Typescript\\frontend\\src\\components\\Videos\\VideoItem.tsx",[],["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":53,"column":5,"nodeType":"49","endLine":53,"endColumn":7,"suggestions":"50"},{"ruleId":"51","severity":2,"message":"52","line":14,"column":19,"nodeType":"53","endLine":14,"endColumn":29},{"ruleId":"43","replacedBy":"54"},{"ruleId":"45","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["58"],"react-hooks/rules-of-hooks","React Hook \"useHistory\" is called in function \"videoItem\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier",["56"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [params.id]",{"range":"61","text":"62"},[1310,1312],"[params.id]"]